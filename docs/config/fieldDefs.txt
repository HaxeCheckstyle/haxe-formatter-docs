emptyLines.finalNewline = bool
emptyLines.maxAnywhereInFile = number
emptyLines.beforePackage = number
emptyLines.afterPackage = number
emptyLines.betweenTypes = number
emptyLines.betweenSingleLineTypes = number
emptyLines.afterFileHeaderComment = number
emptyLines.betweenMultilineComments = number
emptyLines.lineCommentsBetweenTypes = combo,formatter.config.LineCommentEmptyLinePolicy
emptyLines.lineCommentsBetweenFunctions = combo,formatter.config.LineCommentEmptyLinePolicy
emptyLines.beforeRightCurly = combo,formatter.config.KeepEmptyLinesPolicy
emptyLines.afterLeftCurly = combo,formatter.config.KeepEmptyLinesPolicy
emptyLines.afterReturn = combo,formatter.config.KeepEmptyLinesPolicy
emptyLines.beforeBlocks = combo,formatter.config.KeepEmptyLinesPolicy
emptyLines.afterBlocks = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.importAndUsing.betweenImports = number
emptyLines.importAndUsing.betweenImportsLevel = combo,formatter.config.BetweenImportsEmptyLinesLevel
emptyLines.importAndUsing.beforeUsing = number
emptyLines.importAndUsing.beforeType = number

emptyLines.enumAbstractEmptyLines.beginType = number
emptyLines.enumAbstractEmptyLines.endType = number
emptyLines.enumAbstractEmptyLines.betweenVars = number
emptyLines.enumAbstractEmptyLines.afterVars = number
emptyLines.enumAbstractEmptyLines.betweenFunctions = number
emptyLines.enumAbstractEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.classEmptyLines.beginType = number
emptyLines.classEmptyLines.endType = number
emptyLines.classEmptyLines.betweenStaticVars = number
emptyLines.classEmptyLines.afterStaticVars = number
emptyLines.classEmptyLines.afterPrivateVars = number
emptyLines.classEmptyLines.betweenVars = number
emptyLines.classEmptyLines.afterVars = number
emptyLines.classEmptyLines.afterStaticFunctions = number
emptyLines.classEmptyLines.betweenStaticFunctions = number
emptyLines.classEmptyLines.afterPrivateFunctions = number
emptyLines.classEmptyLines.betweenFunctions = number
emptyLines.classEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy


emptyLines.macroClassEmptyLines.beginType = number
emptyLines.macroClassEmptyLines.endType = number
emptyLines.macroClassEmptyLines.betweenStaticVars = number
emptyLines.macroClassEmptyLines.afterStaticVars = number
emptyLines.macroClassEmptyLines.afterPrivateVars = number
emptyLines.macroClassEmptyLines.betweenVars = number
emptyLines.macroClassEmptyLines.afterVars = number
emptyLines.macroClassEmptyLines.afterStaticFunctions = number
emptyLines.macroClassEmptyLines.betweenStaticFunctions = number
emptyLines.macroClassEmptyLines.afterPrivateFunctions = number
emptyLines.macroClassEmptyLines.betweenFunctions = number
emptyLines.macroClassEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.abstractEmptyLines.beginType = number
emptyLines.abstractEmptyLines.endType = number
emptyLines.abstractEmptyLines.betweenStaticVars = number
emptyLines.abstractEmptyLines.afterStaticVars = number
emptyLines.abstractEmptyLines.afterPrivateVars = number
emptyLines.abstractEmptyLines.betweenVars = number
emptyLines.abstractEmptyLines.afterVars = number
emptyLines.abstractEmptyLines.afterStaticFunctions = number
emptyLines.abstractEmptyLines.betweenStaticFunctions = number
emptyLines.abstractEmptyLines.afterPrivateFunctions = number
emptyLines.abstractEmptyLines.betweenFunctions = number
emptyLines.abstractEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.externClassEmptyLines.beginType = number
emptyLines.externClassEmptyLines.endType = number
emptyLines.externClassEmptyLines.betweenVars = number
emptyLines.externClassEmptyLines.afterVars = number
emptyLines.externClassEmptyLines.betweenFunctions = number
emptyLines.externClassEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.interfaceEmptyLines.beginType = number
emptyLines.interfaceEmptyLines.endType = number
emptyLines.interfaceEmptyLines.betweenVars = number
emptyLines.interfaceEmptyLines.afterVars = number
emptyLines.interfaceEmptyLines.betweenFunctions = number
emptyLines.interfaceEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.enumEmptyLines.beginType = number
emptyLines.enumEmptyLines.endType = number
emptyLines.enumEmptyLines.betweenFields = number
emptyLines.enumEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.typedefEmptyLines.beginType = number
emptyLines.typedefEmptyLines.endType = number
emptyLines.typedefEmptyLines.betweenFields = number
emptyLines.typedefEmptyLines.existingBetweenFields = combo,formatter.config.KeepEmptyLinesPolicy

emptyLines.conditionalsEmptyLines.afterIf = number
emptyLines.conditionalsEmptyLines.beforeElse = number
emptyLines.conditionalsEmptyLines.afterElse = number
emptyLines.conditionalsEmptyLines.beforeEnd = number
emptyLines.conditionalsEmptyLines.beforeError = number
emptyLines.conditionalsEmptyLines.afterError = number

indentation.conditionalPolicy = combo,formatter.config.ConditionalIndentationPolicy
indentation.character = text
indentation.tabWidth = number
indentation.trailingWhitespace = bool
indentation.indentObjectLiteral = bool
indentation.indentComplexValueExpressions = bool
indentation.indentCaseLabels = bool

lineEnds.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.emptyCurly = combo,formatter.config.EmptyCurlyPolicy

lineEnds.blockCurly.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.blockCurly.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.blockCurly.emptyCurly = combo,formatter.config.EmptyCurlyPolicy
lineEnds.anonFunctionCurly.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.anonFunctionCurly.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.anonFunctionCurly.emptyCurly = combo,formatter.config.EmptyCurlyPolicy
lineEnds.anonTypeCurly.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.anonTypeCurly.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.anonTypeCurly.emptyCurly = combo,formatter.config.EmptyCurlyPolicy
lineEnds.objectLiteralCurly.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.objectLiteralCurly.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.objectLiteralCurly.emptyCurly = combo,formatter.config.EmptyCurlyPolicy
lineEnds.typedefCurly.leftCurly = combo,formatter.config.LeftCurlyLineEndPolicy
lineEnds.typedefCurly.rightCurly = combo,formatter.config.RightCurlyLineEndPolicy
lineEnds.typedefCurly.emptyCurly = combo,formatter.config.EmptyCurlyPolicy

sameLine.ifBody = combo,formatter.config.SameLinePolicy
sameLine.elseBody = combo,formatter.config.SameLinePolicy
sameLine.ifElse = combo,formatter.config.SameLinePolicy
sameLine.elseIf = combo,formatter.config.SameLinePolicy
sameLine.expressionIf = combo,formatter.config.SameLinePolicy
sameLine.expressionIfWithBlocks = bool
sameLine.forBody = combo,formatter.config.SameLinePolicy
sameLine.whileBody = combo,formatter.config.SameLinePolicy
sameLine.doWhileBody = combo,formatter.config.SameLinePolicy
sameLine.doWhile = combo,formatter.config.SameLinePolicy
sameLine.tryBody = combo,formatter.config.SameLinePolicy
sameLine.catchBody = combo,formatter.config.SameLinePolicy
sameLine.caseBody = combo,formatter.config.SameLinePolicy
sameLine.tryCatch = combo,formatter.config.SameLinePolicy
sameLine.expressionCase = combo,formatter.config.SameLinePolicy
sameLine.expressionTry = combo,formatter.config.SameLinePolicy
sameLine.functionBody = combo,formatter.config.SameLinePolicy
sameLine.anonFunctionBody = combo,formatter.config.SameLinePolicy
sameLine.returnBody = combo,formatter.config.SameLinePolicy
sameLine.returnBodySingleLine = combo,formatter.config.SameLinePolicy
sameLine.untypedBody = combo,formatter.config.SameLinePolicy

whitespace.parenConfig.metadataParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.metadataParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.metadataParens.removeInnerWhenEmpty = bool
whitespace.parenConfig.funcParamParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.funcParamParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.funcParamParens.removeInnerWhenEmpty = bool
whitespace.parenConfig.anonFuncParamParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.anonFuncParamParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.anonFuncParamParens.removeInnerWhenEmpty = bool
whitespace.parenConfig.callParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.callParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.callParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.conditionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.conditionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.conditionParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.ifConditionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.ifConditionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.ifConditionParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.switchConditionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.switchConditionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.switchConditionParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.whileConditionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.whileConditionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.whileConditionParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.sharpConditionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.sharpConditionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.sharpConditionParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.catchParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.catchParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.catchParens.removeInnerWhenEmpty = bool

whitespace.parenConfig.forLoopParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.forLoopParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.forLoopParens.removeInnerWhenEmpty = bool
whitespace.parenConfig.expressionParens.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.expressionParens.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.parenConfig.expressionParens.removeInnerWhenEmpty = bool

whitespace.bracesConfig.blockBraces.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.blockBraces.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.blockBraces.removeInnerWhenEmpty = bool
whitespace.bracesConfig.typedefBraces.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.typedefBraces.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.typedefBraces.removeInnerWhenEmpty = bool
whitespace.bracesConfig.anonTypeBraces.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.anonTypeBraces.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.anonTypeBraces.removeInnerWhenEmpty = bool
whitespace.bracesConfig.objectLiteralBraces.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.objectLiteralBraces.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.objectLiteralBraces.removeInnerWhenEmpty = bool
whitespace.bracesConfig.unknownBraces.openingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.unknownBraces.closingPolicy = combo,formatter.config.WhitespacePolicy
whitespace.bracesConfig.unknownBraces.removeInnerWhenEmpty = bool

whitespace.openingBracketPolicy = combo,formatter.config.WhitespacePolicy
whitespace.closingBracketPolicy = combo,formatter.config.WhitespacePolicy
whitespace.typeParamOpenPolicy = combo,formatter.config.WhitespacePolicy
whitespace.typeParamClosePolicy = combo,formatter.config.WhitespacePolicy
whitespace.typeExtensionPolicy = combo,formatter.config.WhitespacePolicy
whitespace.commaPolicy = combo,formatter.config.WhitespacePolicy
whitespace.dotPolicy = combo,formatter.config.WhitespacePolicy
whitespace.colonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.caseColonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.objectFieldColonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.typeHintColonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.typeCheckColonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.ternaryPolicy = combo,formatter.config.WhitespacePolicy
whitespace.semicolonPolicy = combo,formatter.config.WhitespacePolicy
whitespace.ifPolicy = combo,formatter.config.WhitespacePolicy
whitespace.doPolicy = combo,formatter.config.WhitespacePolicy
whitespace.whilePolicy = combo,formatter.config.WhitespacePolicy
whitespace.forPolicy = combo,formatter.config.WhitespacePolicy
whitespace.switchPolicy = combo,formatter.config.WhitespacePolicy
whitespace.tryPolicy = combo,formatter.config.WhitespacePolicy
whitespace.catchPolicy = combo,formatter.config.WhitespacePolicy
whitespace.binopPolicy = combo,formatter.config.WhitespacePolicy
whitespace.intervalPolicy = combo,formatter.config.WhitespacePolicy
whitespace.arrowFunctionsPolicy = combo,formatter.config.WhitespacePolicy
whitespace.functionTypeHaxe3Policy = combo,formatter.config.WhitespacePolicy
whitespace.functionTypeHaxe4Policy = combo,formatter.config.WhitespacePolicy

whitespace.compressSuccessiveParenthesis = bool
whitespace.formatStringInterpolation = bool
whitespace.addLineCommentSpace = bool

wrapping.maxLineLength = number

wrapping.arrayMatrixWrap = combo,formatter.config.ArrayMatrixWrap

wrapping.arrayWrap.defaultWrap = combo,formatter.config.WrappingType
wrapping.arrayWrap.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.defaultAdditionalIndent = number

wrapping.arrayWrap.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[0].conditions[0].value = number
wrapping.arrayWrap.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[0].conditions[1].value = number
wrapping.arrayWrap.rules[0].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[0].additionalIndent = number

wrapping.arrayWrap.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[1].conditions[0].value = number
wrapping.arrayWrap.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[1].conditions[1].value = number
wrapping.arrayWrap.rules[1].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[1].additionalIndent = number

wrapping.arrayWrap.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[2].conditions[0].value = number
wrapping.arrayWrap.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[2].conditions[1].value = number
wrapping.arrayWrap.rules[2].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[2].additionalIndent = number

wrapping.arrayWrap.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[3].conditions[0].value = number
wrapping.arrayWrap.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[3].conditions[1].value = number
wrapping.arrayWrap.rules[3].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[3].additionalIndent = number

wrapping.arrayWrap.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[4].conditions[0].value = number
wrapping.arrayWrap.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[4].conditions[1].value = number
wrapping.arrayWrap.rules[4].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[4].additionalIndent = number

wrapping.arrayWrap.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[5].conditions[0].value = number
wrapping.arrayWrap.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.arrayWrap.rules[5].conditions[1].value = number
wrapping.arrayWrap.rules[5].type = combo,formatter.config.WrappingType
wrapping.arrayWrap.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.arrayWrap.rules[5].additionalIndent = number

wrapping.typeParameter.defaultWrap = combo,formatter.config.WrappingType
wrapping.typeParameter.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.typeParameter.defaultAdditionalIndent = number

wrapping.typeParameter.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[0].conditions[0].value = number
wrapping.typeParameter.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[0].conditions[1].value = number
wrapping.typeParameter.rules[0].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[0].additionalIndent = number

wrapping.typeParameter.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[1].conditions[0].value = number
wrapping.typeParameter.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[1].conditions[1].value = number
wrapping.typeParameter.rules[1].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[1].additionalIndent = number

wrapping.typeParameter.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[2].conditions[0].value = number
wrapping.typeParameter.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[2].conditions[1].value = number
wrapping.typeParameter.rules[2].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[2].additionalIndent = number

wrapping.typeParameter.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[3].conditions[0].value = number
wrapping.typeParameter.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[3].conditions[1].value = number
wrapping.typeParameter.rules[3].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[3].additionalIndent = number

wrapping.typeParameter.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[4].conditions[0].value = number
wrapping.typeParameter.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[4].conditions[1].value = number
wrapping.typeParameter.rules[4].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[4].additionalIndent = number

wrapping.typeParameter.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[5].conditions[0].value = number
wrapping.typeParameter.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.typeParameter.rules[5].conditions[1].value = number
wrapping.typeParameter.rules[5].type = combo,formatter.config.WrappingType
wrapping.typeParameter.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.typeParameter.rules[5].additionalIndent = number

wrapping.functionSignature.defaultWrap = combo,formatter.config.WrappingType
wrapping.functionSignature.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.functionSignature.defaultAdditionalIndent = number

wrapping.functionSignature.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[0].conditions[0].value = number
wrapping.functionSignature.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[0].conditions[1].value = number
wrapping.functionSignature.rules[0].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[0].additionalIndent = number

wrapping.functionSignature.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[1].conditions[0].value = number
wrapping.functionSignature.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[1].conditions[1].value = number
wrapping.functionSignature.rules[1].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[1].additionalIndent = number

wrapping.functionSignature.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[2].conditions[0].value = number
wrapping.functionSignature.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[2].conditions[1].value = number
wrapping.functionSignature.rules[2].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[2].additionalIndent = number

wrapping.functionSignature.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[3].conditions[0].value = number
wrapping.functionSignature.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[3].conditions[1].value = number
wrapping.functionSignature.rules[3].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[3].additionalIndent = number

wrapping.functionSignature.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[4].conditions[0].value = number
wrapping.functionSignature.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[4].conditions[1].value = number
wrapping.functionSignature.rules[4].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[4].additionalIndent = number

wrapping.functionSignature.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[5].conditions[0].value = number
wrapping.functionSignature.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.functionSignature.rules[5].conditions[1].value = number
wrapping.functionSignature.rules[5].type = combo,formatter.config.WrappingType
wrapping.functionSignature.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.functionSignature.rules[5].additionalIndent = number

wrapping.anonFunctionSignature.defaultWrap = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.defaultAdditionalIndent = number

wrapping.anonFunctionSignature.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[0].conditions[0].value = number
wrapping.anonFunctionSignature.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[0].conditions[1].value = number
wrapping.anonFunctionSignature.rules[0].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[0].additionalIndent = number

wrapping.anonFunctionSignature.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[1].conditions[0].value = number
wrapping.anonFunctionSignature.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[1].conditions[1].value = number
wrapping.anonFunctionSignature.rules[1].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[1].additionalIndent = number

wrapping.anonFunctionSignature.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[2].conditions[0].value = number
wrapping.anonFunctionSignature.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[2].conditions[1].value = number
wrapping.anonFunctionSignature.rules[2].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[2].additionalIndent = number

wrapping.anonFunctionSignature.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[3].conditions[0].value = number
wrapping.anonFunctionSignature.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[3].conditions[1].value = number
wrapping.anonFunctionSignature.rules[3].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[3].additionalIndent = number

wrapping.anonFunctionSignature.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[4].conditions[0].value = number
wrapping.anonFunctionSignature.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[4].conditions[1].value = number
wrapping.anonFunctionSignature.rules[4].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[4].additionalIndent = number

wrapping.anonFunctionSignature.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[5].conditions[0].value = number
wrapping.anonFunctionSignature.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonFunctionSignature.rules[5].conditions[1].value = number
wrapping.anonFunctionSignature.rules[5].type = combo,formatter.config.WrappingType
wrapping.anonFunctionSignature.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.anonFunctionSignature.rules[5].additionalIndent = number

wrapping.callParameter.defaultWrap = combo,formatter.config.WrappingType
wrapping.callParameter.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.callParameter.defaultAdditionalIndent = number

wrapping.callParameter.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[0].conditions[0].value = number
wrapping.callParameter.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[0].conditions[1].value = number
wrapping.callParameter.rules[0].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[0].additionalIndent = number

wrapping.callParameter.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[1].conditions[0].value = number
wrapping.callParameter.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[1].conditions[1].value = number
wrapping.callParameter.rules[1].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[1].additionalIndent = number

wrapping.callParameter.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[2].conditions[0].value = number
wrapping.callParameter.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[2].conditions[1].value = number
wrapping.callParameter.rules[2].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[2].additionalIndent = number

wrapping.callParameter.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[3].conditions[0].value = number
wrapping.callParameter.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[3].conditions[1].value = number
wrapping.callParameter.rules[3].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[3].additionalIndent = number

wrapping.callParameter.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[4].conditions[0].value = number
wrapping.callParameter.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[4].conditions[1].value = number
wrapping.callParameter.rules[4].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[4].additionalIndent = number

wrapping.callParameter.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[5].conditions[0].value = number
wrapping.callParameter.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.callParameter.rules[5].conditions[1].value = number
wrapping.callParameter.rules[5].type = combo,formatter.config.WrappingType
wrapping.callParameter.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.callParameter.rules[5].additionalIndent = number

wrapping.metadataCallParameter.defaultWrap = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.defaultAdditionalIndent = number

wrapping.metadataCallParameter.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[0].conditions[0].value = number
wrapping.metadataCallParameter.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[0].conditions[1].value = number
wrapping.metadataCallParameter.rules[0].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[0].additionalIndent = number

wrapping.metadataCallParameter.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[1].conditions[0].value = number
wrapping.metadataCallParameter.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[1].conditions[1].value = number
wrapping.metadataCallParameter.rules[1].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[1].additionalIndent = number

wrapping.metadataCallParameter.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[2].conditions[0].value = number
wrapping.metadataCallParameter.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[2].conditions[1].value = number
wrapping.metadataCallParameter.rules[2].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[2].additionalIndent = number

wrapping.metadataCallParameter.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[3].conditions[0].value = number
wrapping.metadataCallParameter.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[3].conditions[1].value = number
wrapping.metadataCallParameter.rules[3].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[3].additionalIndent = number

wrapping.metadataCallParameter.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[4].conditions[0].value = number
wrapping.metadataCallParameter.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[4].conditions[1].value = number
wrapping.metadataCallParameter.rules[4].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[4].additionalIndent = number

wrapping.metadataCallParameter.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[5].conditions[0].value = number
wrapping.metadataCallParameter.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.metadataCallParameter.rules[5].conditions[1].value = number
wrapping.metadataCallParameter.rules[5].type = combo,formatter.config.WrappingType
wrapping.metadataCallParameter.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.metadataCallParameter.rules[5].additionalIndent = number

wrapping.objectLiteral.defaultWrap = combo,formatter.config.WrappingType
wrapping.objectLiteral.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.defaultAdditionalIndent = number

wrapping.objectLiteral.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[0].conditions[0].value = number
wrapping.objectLiteral.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[0].conditions[1].value = number
wrapping.objectLiteral.rules[0].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[0].additionalIndent = number

wrapping.objectLiteral.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[1].conditions[0].value = number
wrapping.objectLiteral.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[1].conditions[1].value = number
wrapping.objectLiteral.rules[1].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[1].additionalIndent = number

wrapping.objectLiteral.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[2].conditions[0].value = number
wrapping.objectLiteral.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[2].conditions[1].value = number
wrapping.objectLiteral.rules[2].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[2].additionalIndent = number

wrapping.objectLiteral.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[3].conditions[0].value = number
wrapping.objectLiteral.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[3].conditions[1].value = number
wrapping.objectLiteral.rules[3].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[3].additionalIndent = number

wrapping.objectLiteral.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[4].conditions[0].value = number
wrapping.objectLiteral.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[4].conditions[1].value = number
wrapping.objectLiteral.rules[4].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[4].additionalIndent = number

wrapping.objectLiteral.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[5].conditions[0].value = number
wrapping.objectLiteral.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.objectLiteral.rules[5].conditions[1].value = number
wrapping.objectLiteral.rules[5].type = combo,formatter.config.WrappingType
wrapping.objectLiteral.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.objectLiteral.rules[5].additionalIndent = number

wrapping.anonType.defaultWrap = combo,formatter.config.WrappingType
wrapping.anonType.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.anonType.defaultAdditionalIndent = number

wrapping.anonType.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[0].conditions[0].value = number
wrapping.anonType.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[0].conditions[1].value = number
wrapping.anonType.rules[0].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[0].additionalIndent = number

wrapping.anonType.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[1].conditions[0].value = number
wrapping.anonType.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[1].conditions[1].value = number
wrapping.anonType.rules[1].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[1].additionalIndent = number

wrapping.anonType.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[2].conditions[0].value = number
wrapping.anonType.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[2].conditions[1].value = number
wrapping.anonType.rules[2].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[2].additionalIndent = number

wrapping.anonType.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[3].conditions[0].value = number
wrapping.anonType.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[3].conditions[1].value = number
wrapping.anonType.rules[3].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[3].additionalIndent = number

wrapping.anonType.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[4].conditions[0].value = number
wrapping.anonType.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[4].conditions[1].value = number
wrapping.anonType.rules[4].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[4].additionalIndent = number

wrapping.anonType.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[5].conditions[0].value = number
wrapping.anonType.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.anonType.rules[5].conditions[1].value = number
wrapping.anonType.rules[5].type = combo,formatter.config.WrappingType
wrapping.anonType.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.anonType.rules[5].additionalIndent = number

wrapping.methodChain.defaultWrap = combo,formatter.config.WrappingType
wrapping.methodChain.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.methodChain.defaultAdditionalIndent = number

wrapping.methodChain.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[0].conditions[0].value = number
wrapping.methodChain.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[0].conditions[1].value = number
wrapping.methodChain.rules[0].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[0].additionalIndent = number

wrapping.methodChain.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[1].conditions[0].value = number
wrapping.methodChain.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[1].conditions[1].value = number
wrapping.methodChain.rules[1].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[1].additionalIndent = number

wrapping.methodChain.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[2].conditions[0].value = number
wrapping.methodChain.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[2].conditions[1].value = number
wrapping.methodChain.rules[2].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[2].additionalIndent = number

wrapping.methodChain.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[3].conditions[0].value = number
wrapping.methodChain.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[3].conditions[1].value = number
wrapping.methodChain.rules[3].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[3].additionalIndent = number

wrapping.methodChain.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[4].conditions[0].value = number
wrapping.methodChain.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[4].conditions[1].value = number
wrapping.methodChain.rules[4].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[4].additionalIndent = number

wrapping.methodChain.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[5].conditions[0].value = number
wrapping.methodChain.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.methodChain.rules[5].conditions[1].value = number
wrapping.methodChain.rules[5].type = combo,formatter.config.WrappingType
wrapping.methodChain.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.methodChain.rules[5].additionalIndent = number

wrapping.opBoolChain.defaultWrap = combo,formatter.config.WrappingType
wrapping.opBoolChain.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.defaultAdditionalIndent = number

wrapping.opBoolChain.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[0].conditions[0].value = number
wrapping.opBoolChain.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[0].conditions[1].value = number
wrapping.opBoolChain.rules[0].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[0].additionalIndent = number

wrapping.opBoolChain.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[1].conditions[0].value = number
wrapping.opBoolChain.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[1].conditions[1].value = number
wrapping.opBoolChain.rules[1].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[1].additionalIndent = number

wrapping.opBoolChain.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[2].conditions[0].value = number
wrapping.opBoolChain.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[2].conditions[1].value = number
wrapping.opBoolChain.rules[2].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[2].additionalIndent = number

wrapping.opBoolChain.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[3].conditions[0].value = number
wrapping.opBoolChain.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[3].conditions[1].value = number
wrapping.opBoolChain.rules[3].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[3].additionalIndent = number

wrapping.opBoolChain.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[4].conditions[0].value = number
wrapping.opBoolChain.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[4].conditions[1].value = number
wrapping.opBoolChain.rules[4].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[4].additionalIndent = number

wrapping.opBoolChain.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[5].conditions[0].value = number
wrapping.opBoolChain.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opBoolChain.rules[5].conditions[1].value = number
wrapping.opBoolChain.rules[5].type = combo,formatter.config.WrappingType
wrapping.opBoolChain.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.opBoolChain.rules[5].additionalIndent = number

wrapping.implementsExtends.defaultWrap = combo,formatter.config.WrappingType
wrapping.implementsExtends.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.defaultAdditionalIndent = number

wrapping.implementsExtends.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[0].conditions[0].value = number
wrapping.implementsExtends.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[0].conditions[1].value = number
wrapping.implementsExtends.rules[0].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[0].additionalIndent = number

wrapping.implementsExtends.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[1].conditions[0].value = number
wrapping.implementsExtends.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[1].conditions[1].value = number
wrapping.implementsExtends.rules[1].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[1].additionalIndent = number

wrapping.implementsExtends.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[2].conditions[0].value = number
wrapping.implementsExtends.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[2].conditions[1].value = number
wrapping.implementsExtends.rules[2].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[2].additionalIndent = number

wrapping.implementsExtends.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[3].conditions[0].value = number
wrapping.implementsExtends.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[3].conditions[1].value = number
wrapping.implementsExtends.rules[3].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[3].additionalIndent = number

wrapping.implementsExtends.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[4].conditions[0].value = number
wrapping.implementsExtends.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[4].conditions[1].value = number
wrapping.implementsExtends.rules[4].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[4].additionalIndent = number

wrapping.implementsExtends.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[5].conditions[0].value = number
wrapping.implementsExtends.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.implementsExtends.rules[5].conditions[1].value = number
wrapping.implementsExtends.rules[5].type = combo,formatter.config.WrappingType
wrapping.implementsExtends.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.implementsExtends.rules[5].additionalIndent = number

wrapping.opAddSubChain.defaultWrap = combo,formatter.config.WrappingType
wrapping.opAddSubChain.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.defaultAdditionalIndent = number

wrapping.opAddSubChain.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[0].conditions[0].value = number
wrapping.opAddSubChain.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[0].conditions[1].value = number
wrapping.opAddSubChain.rules[0].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[0].additionalIndent = number

wrapping.opAddSubChain.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[1].conditions[0].value = number
wrapping.opAddSubChain.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[1].conditions[1].value = number
wrapping.opAddSubChain.rules[1].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[1].additionalIndent = number

wrapping.opAddSubChain.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[2].conditions[0].value = number
wrapping.opAddSubChain.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[2].conditions[1].value = number
wrapping.opAddSubChain.rules[2].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[2].additionalIndent = number

wrapping.opAddSubChain.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[3].conditions[0].value = number
wrapping.opAddSubChain.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[3].conditions[1].value = number
wrapping.opAddSubChain.rules[3].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[3].additionalIndent = number

wrapping.opAddSubChain.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[4].conditions[0].value = number
wrapping.opAddSubChain.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[4].conditions[1].value = number
wrapping.opAddSubChain.rules[4].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[4].additionalIndent = number

wrapping.opAddSubChain.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[5].conditions[0].value = number
wrapping.opAddSubChain.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.opAddSubChain.rules[5].conditions[1].value = number
wrapping.opAddSubChain.rules[5].type = combo,formatter.config.WrappingType
wrapping.opAddSubChain.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.opAddSubChain.rules[5].additionalIndent = number

wrapping.multiVar.defaultWrap = combo,formatter.config.WrappingType
wrapping.multiVar.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.multiVar.defaultAdditionalIndent = number

wrapping.multiVar.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[0].conditions[0].value = number
wrapping.multiVar.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[0].conditions[1].value = number
wrapping.multiVar.rules[0].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[0].additionalIndent = number

wrapping.multiVar.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[1].conditions[0].value = number
wrapping.multiVar.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[1].conditions[1].value = number
wrapping.multiVar.rules[1].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[1].additionalIndent = number

wrapping.multiVar.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[2].conditions[0].value = number
wrapping.multiVar.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[2].conditions[1].value = number
wrapping.multiVar.rules[2].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[2].additionalIndent = number

wrapping.multiVar.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[3].conditions[0].value = number
wrapping.multiVar.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[3].conditions[1].value = number
wrapping.multiVar.rules[3].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[3].additionalIndent = number

wrapping.multiVar.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[4].conditions[0].value = number
wrapping.multiVar.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[4].conditions[1].value = number
wrapping.multiVar.rules[4].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[4].additionalIndent = number

wrapping.multiVar.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[5].conditions[0].value = number
wrapping.multiVar.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.multiVar.rules[5].conditions[1].value = number
wrapping.multiVar.rules[5].type = combo,formatter.config.WrappingType
wrapping.multiVar.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.multiVar.rules[5].additionalIndent = number

wrapping.casePattern.defaultWrap = combo,formatter.config.WrappingType
wrapping.casePattern.defaultLocation = combo,formatter.config.WrappingLocation
wrapping.casePattern.defaultAdditionalIndent = number

wrapping.casePattern.rules[0].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[0].conditions[0].value = number
wrapping.casePattern.rules[0].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[0].conditions[1].value = number
wrapping.casePattern.rules[0].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[0].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[0].additionalIndent = number

wrapping.casePattern.rules[1].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[1].conditions[0].value = number
wrapping.casePattern.rules[1].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[1].conditions[1].value = number
wrapping.casePattern.rules[1].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[1].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[1].additionalIndent = number

wrapping.casePattern.rules[2].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[2].conditions[0].value = number
wrapping.casePattern.rules[2].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[2].conditions[1].value = number
wrapping.casePattern.rules[2].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[2].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[2].additionalIndent = number

wrapping.casePattern.rules[3].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[3].conditions[0].value = number
wrapping.casePattern.rules[3].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[3].conditions[1].value = number
wrapping.casePattern.rules[3].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[3].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[3].additionalIndent = number

wrapping.casePattern.rules[4].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[4].conditions[0].value = number
wrapping.casePattern.rules[4].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[4].conditions[1].value = number
wrapping.casePattern.rules[4].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[4].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[4].additionalIndent = number

wrapping.casePattern.rules[5].conditions[0].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[5].conditions[0].value = number
wrapping.casePattern.rules[5].conditions[1].cond = combo,formatter.config.WrapConditionType
wrapping.casePattern.rules[5].conditions[1].value = number
wrapping.casePattern.rules[5].type = combo,formatter.config.WrappingType
wrapping.casePattern.rules[5].location = combo,formatter.config.WrappingLocation
wrapping.casePattern.rules[5].additionalIndent = number
